/* -------------------------------------------------------------------------- */
/*                               Object_Literal                               */
/* -------------------------------------------------------------------------- */
// 객체란?
// 자바스크립트는 객체기반의 언어이며, 자바스크립트를 구성하는 거의 "모든 것"이 객체이다."
// 원시 값을 제외한 나머지 값(함수, 배열, 정규 표현식 등)은 모두 객체이다.

// 원시 타입은 cou단 하나의 값만 나타내지만 객체 타입은 다양한 타입의 값을 하나의 단위로 구성한 복합적인 자료구조이다.
// 원시 타입의 값, 즉 원시 값은 변경 불가능(immutable)한 값이지만 객체 타입의 값, 즉 객체는 변경 가능(mutable)한 값이다.

// 객체는 0개 이상의 프로퍼티로 구성된 집합이며, 프로퍼티는 키와 값으로 구성된다.
var person = {
  name: "Lee",
  age: 20,
};
// 자바스크립트에서 사용되는 모든 값은 프로퍼티가 될 수 있으며, 함수도 프로퍼티 값으로 사용할 수 있다.
// 프로퍼티 값이 함수일 경우 일반 함수와 구분하기 위해 이를 메서드(method)라고 부른다.
var count = {
  num: 0, // 프로퍼티 : 객체의 상태를 나타내는 값
  increase: function () {
    // 메서드 : 프로퍼티를 참조하고 조작할 수 있는 동작
    this.num++;
  },
};

// 객체 리터럴에 의한 객체 생성
// 객체 리터럴은 중괄호({...})내에 0개 이상의 프로퍼티를 정의한다.
// 변수에 할당되는 시점에 JS엔진은 객체 리터럴을 해석해 객체를 생성한다.
var person = {
  name: "Lee",
  sayHello: function () {
    console.log(`Hello! my name is ${this.name}.`);
  },
};
console.log(typeof person); // object
console.log(person); // { name: 'Lee', sayHello: [Function: sayHello] }
