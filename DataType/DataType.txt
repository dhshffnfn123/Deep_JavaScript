
# --------------------------------- DataType --------------------------------- #

- 값의 종류를 일컫는다.
- 자바스크립트의 모든 값은 타입을 가진다.
- ES6는 7개의 데이터 타입을 제공한다.
    - Number : 숫자, 정수와 실수 구분 없이 하나의 숫자 타입만 존재
    - String : 문자열
    - Boolean : 논리적 true & false
    - undefined : var 키워드로 선언된 변수에 암묵적으로 할당되는 값은
    - null : 값이 없다는 것을 의도적으로 명시할 때 사용하는 값
    - symbol : ES6에서 추가된 7번째 타입
    - object : 객체, 함수, 배열 등

    
/* ------------------------------- 데이터 타입의 필요성 ------------------------------ */

# 데이터 타입에 의한 메모리 공간의 확보와 참조
 - 자바스크립트 엔진은 값의 종류에 따라 정해진 크기의 메모리 공간을 확보한다. 
 - 즉, 변수에 할당되는 값의 데이터 타입의 따라 확보해야 할 메모리 공간의 크기가 결정된다.
 - 자바스크립트는 숫자 타입의 값을 생성할 때 배정밀도 64비트 부동소수점 형식을 사용한다.

# 데이터 타입이 필요한 이유
 - 값을 저장할 때 확보해야 하는 메모리 공간의 크기를 결정하기 위해
 - 값을 참조할 때 한 번에 읽어 들여야 할 메모리 공간의 크기를 결정하기 위해
 - 메모리에서 읽어 들인 2진수를 어떻게 해석할지 결정하기 위해

# ---------------------------------- 동적 타이핑 ---------------------------------- #

# 정적 타입
 - 변수에 할당할 수 있는 값의 종류, 즉 데이터 타입을 사전에 선언해야 한다. 이를 명시적 타입 선언 이라 한다.
 - 변수의 타입을 변경할 수 없으며, 변수에 선언한 타입에 맞는 값만 할당할 수 있다.
 - 컴파일 시점에서 타입 체크(선언한 데이터 타입에 맞는 값을 할당했는지 검사하는 처리)를 수행한다.

# 동적 타입 (JavaScript)
 - 자바스크립트는 타입을 선언하지 않는다. 어떠한 데이터 타입의 값이라도 자유롭게 할당할 수 있다.
 - 자바스크립트의 변수는 선언이 아닌 할당에 의해 타입이 결정된다.(타입 추론)된다.
 - 재할당에 의해 변수의 타입은 언제든지 동적으로 변할 수 있다. 이러한 특징을 '동적 타이핑'이라고 한다.
 - 정적 타입 언어와 구별하기 위해 '동적 타입 언어' 라고 한다.

# 동적 타입의 단점
 - 변수 값은 언제든지 변경될 수 있기 때문에 복잡한 프로그램에서는 변화하는 변수 값을 추적하기 어려울 수 있다.
 - 동적 타입 언어의 변수는 값을 확인하기 전에는 타입을 확신할 수 없다.
 - 개발자의 의도와는 상관없이 자바스크립트 엔진에 의해 암묵적으로 타입이 자동으로 변환되기도 한다.
 - 유연성은 높지만 신뢰성은 떨어진다.

# 변수 사용시 주의 사항!
 - 변수는 꼭 필요한 경우에 한해 제한적으로 사용한다.(필요한만큼 최소한으로 유지)
 - 변수의 유효 범위(스코프)는 최대한 좁게 만들어 변수의 부작용을 억제한다.
 - 전역 변수는 최대한 사용하지 않도록 한다. (프로그램의 복잡성 증가, 처리 흐름 추적의 어려움, 오류 원인 특정이 어려움)
 - 변수보다는 상수를 사용해 값의 변경을 억제한다. (const)
 - 변수 이름은 변수의 목적이나 의미를 파악할 수 있도록 네이밍한다.
